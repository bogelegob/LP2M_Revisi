@model LP2M_Revisi.Models.Surattuga

@{
    ViewData["Title"] = "Tambah Surat Tugas";
    ViewData["Routing"] = "Surat Tugas";
    ViewData["Routing2"] = "Tambah Surat Tugas";
    // Konversi ViewData["ListPengguna"] menjadi IEnumerable<SelectListItem>
    var listPengguna = ViewData["ListPengguna"] as IEnumerable<SelectListItem>;
}

<form asp-action="Create" enctype="multipart/form-data">
    <div class="card">
        <div class="card-header">
            <label><b>Tambah Surat Tugas</b></label>
        </div>
        <div class="card-body">
            <div class="container-fluid">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label asp-for="Namakegiatan" class="control-label">Nama Kegiatan</label>
                            <input asp-for="Namakegiatan" class="form-control" required />
                            <span asp-validation-for="Namakegiatan" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label asp-for="Masapelaksanaan" class="control-label">Masa Pelaksanaan</label>
                            <input asp-for="Masapelaksanaan" class="form-control" required />
                            <span asp-validation-for="Masapelaksanaan" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label asp-for="Idpenggunas" class="control-label">Pilih Pengguna</label>
                            <select asp-for="Idpenggunas" class="form-control" asp-items="@listPengguna" multiple id="selectedUsers"></select>
                            <span asp-validation-for="Idpenggunas" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="selectedUsersTextarea">Selected Users</label>
                            <textarea id="selectedUsersTextarea" class="form-control" readonly></textarea>
                        </div>
                    </div>
                </div>
                    <div class="form-group">
                        <input type="button" id="hapus" value="Hapus" class="btn btn-danger" />
                    </div>
                
                    <div class="form-group">
                        <label asp-for="Buktipendukung" class="control-label">Bukti Pendukung</label>
                        <input asp-for="Buktipendukung" class="form-control" type="file" required />
                        <span asp-validation-for="Buktipendukung" class="text-danger"></span>
                    </div>
            
                <div class="form-group">
                    <button type="submit" class="btn btn-primary float-left">Create</button>
                    <a asp-action="Index" class="btn btn-secondary float-right">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</form>
        

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Mendapatkan elemen-elemen HTML yang diperlukan
        const selectPengguna = document.getElementById('selectedUsers');
        const textareaSelectedUsers = document.getElementById('selectedUsersTextarea');
        const buttonHapus = document.getElementById('hapus');

        // Inisialisasi array untuk menyimpan pengguna yang dipilih
        let selectedUsers = [];

        // Menangani perubahan pada elemen select
        selectPengguna.addEventListener('change', function () {
            // Mendapatkan opsi yang dipilih
            const newlySelectedUsers = Array.from(selectPengguna.selectedOptions).map(option => option.text);
            // Mengupdate nilai textarea dengan semua pengguna yang dipilih
            textareaSelectedUsers.value = selectedUsers.join(', ');
        });

        // Menangani klik pada opsi (pengguna)
        selectPengguna.addEventListener('click', function (event) {
            if (event.target.tagName === 'OPTION') {
                const clickedUser = event.target.text;

                // Menambahkan pengguna yang diklik ke dalam array
                selectedUsers.push(clickedUser);

                // Mengupdate nilai textarea dengan semua pengguna yang dipilih
                textareaSelectedUsers.value = selectedUsers.join(', ');
            }
        });

        // Menangani klik pada tombol Hapus Nama Terakhir
        buttonHapus.addEventListener('click', function () {
            // Menghapus nama terakhir dari array
            selectedUsers.pop();

            // Mengupdate nilai textarea dengan semua pengguna yang dipilih
            textareaSelectedUsers.value = selectedUsers.join(', ');
        });

        // Menangani submit formulir
        document.querySelector('form').addEventListener('submit', function (e) {
            const buktiPendukungInput = document.querySelector('input[name="Buktipendukung"]');
            if (buktiPendukungInput.files.length === 0) {
                e.preventDefault(); // Mencegah pengiriman formulir jika tidak ada file yang diunggah.
            }

            // Menambahkan nilai yang dipilih ke dalam textarea sebelum mengirim formulir
            document.getElementById('Idpenggunas').value = selectedUsers.join(',');
        });
    });
</script>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
